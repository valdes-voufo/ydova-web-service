stages:
#  - build
  - deploy


variables:
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"

# Build Stage
build:
  stage: build
  script:
    - docker build -t registry.git.rwth-aachen.de/ydova/ydova-package-registry .
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.git.rwth-aachen.de
    - docker push registry.git.rwth-aachen.de/ydova/ydova-package-registry
  only:
    - main

# Deploy Stage
deploy:
  stage: deploy
  script:
    # Ensure SSH key is loaded into the agent
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add - > /dev/null

    # SSH into EC2 and execute deployment commands
    -  ssh -o StrictHostKeyChecking=no -p 22 ec2-user@3.84.219.44 <<EOF
    -  docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.git.rwth-aachen.de
    -  docker pull registry.git.rwth-aachen.de/ydova/ydova-package-registry:latest
    -  docker stop ydova-web-service || true
    -  docker rm ydova-web-service || true
    -  docker run -d --name ydova-web-service -p 8080:8080 registry.git.rwth-aachen.de/ydova/ydova-package-registry:latest
      EOF
  only:
    - main

